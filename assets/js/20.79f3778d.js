(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{305:function(r,e,t){"use strict";t.r(e);var a=t(17),o=Object(a.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h3",{attrs:{id:"层叠样式表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#层叠样式表"}},[r._v("#")]),r._v(" "),t("strong",[r._v("层叠样式表")])]),r._v(" "),t("p",[r._v("(Cascading Style Sheets，缩写为 "),t("strong",[r._v("CSS")]),r._v("），是一种 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/DOM/stylesheet",target:"_blank",rel:"noopener noreferrer"}},[r._v("样式表"),t("OutboundLink")],1),r._v(" 语言，用来描述 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/HTML",target:"_blank",rel:"noopener noreferrer"}},[r._v("HTML"),t("OutboundLink")],1),r._v(" 或 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/XML_%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"}},[r._v("XML"),t("OutboundLink")],1),r._v("（包括如 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/SVG",target:"_blank",rel:"noopener noreferrer"}},[r._v("SVG"),t("OutboundLink")],1),r._v("、"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/MathML",target:"_blank",rel:"noopener noreferrer"}},[r._v("MathML"),t("OutboundLink")],1),r._v("、"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/XHTML",target:"_blank",rel:"noopener noreferrer"}},[r._v("XHTML"),t("OutboundLink")],1),r._v(" 之类的 XML 分支语言）文档的呈现。CSS 描述了在屏幕、纸质、音频等其它媒体上的元素应该如何被渲染的问题。")]),r._v(" "),t("p",[r._v("CSS 是"),t("strong",[r._v("开放网络")]),r._v("的核心语言之一，由 "),t("a",{attrs:{href:"http://w3.org/Style/CSS/#specs",target:"_blank",rel:"noopener noreferrer"}},[r._v("W3C 规范"),t("OutboundLink")],1),r._v(" 实现跨浏览器的标准化。CSS节省了大量的工作。 样式可以通过定义保存在外部.css文件中，同时控制多个网页的布局，这意味着开发者不必经历在所有网页上编辑布局的麻烦。CSS 被分为不同等级：CSS1 现已废弃， CSS2.1 是推荐标准， "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/CSS/CSS3",target:"_blank",rel:"noopener noreferrer"}},[r._v("CSS3"),t("OutboundLink")],1),r._v(" 分成多个小模块且正在标准化中。")]),r._v(" "),t("h3",{attrs:{id:"css-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-介绍"}},[r._v("#")]),r._v(" [CSS 介绍]")]),r._v(" "),t("p",[r._v("本模块带领你从 CSS 如何工作的基础知识进行入门，具体包括：选择器和属性，编写 CSS 规则，将 CSS 应用于 HTML，如何在 CSS 中规范长度、颜色和其他单位，层叠和继承，盒模型基础，以及调试 CSS。")]),r._v(" "),t("h3",{attrs:{id:"样式化文本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#样式化文本"}},[r._v("#")]),r._v(" [ 样式化文本]")]),r._v(" "),t("p",[r._v("这里我们将会看到文本格式化的基础，具体包括：设置字体、粗细和倾斜，行和字符间距，以及阴影和其他文本特性。我们通过研究在个人页面上应用自定义字体，并样式化列表和链接的方式完善本模块。")]),r._v(" "),t("h3",{attrs:{id:"样式化盒子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#样式化盒子"}},[r._v("#")]),r._v(" [样式化盒子]")]),r._v(" "),t("p",[r._v("接下来，我们将会看到样式化盒子，它是向着构建网页布局方向前进的基础步骤之一。在本模块，我们概括了盒子模型，然后研究通过在盒中应用这些方式控制盒布局：设置内边距、边框、外边距，设置自定义背景颜色、图片和其他特性，以及诸如阴影、过滤器之类的高级特性。")]),r._v(" "),t("h3",{attrs:{id:"css-布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-布局"}},[r._v("#")]),r._v(" [CSS 布局]")]),r._v(" "),t("p",[r._v("到这里，我们已经了解了 CSS 基础：如何样式化文本，以及如何样式化和操作内置个人内容的盒模型。现在是时候研究“如何相对于可视区域将你的盒子彼此间放置于正确位置”了。我们到此已经覆盖了所有预备知识，因此现在能够深入学习 CSS 布局，研究不同的显示设置，包括浮动和定位在内的传统布局方法，以及像如弹性盒（flexbox）之类新近流行的布局工具。")])])}),[],!1,null,null,null);e.default=o.exports}}]);